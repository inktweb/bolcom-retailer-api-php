<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Enums\Models
 */

namespace Inktweb\Bolcom\RetailerApi\Enums\Models\V8\Advertiser\TargetProduct;

use Inktweb\Bolcom\RetailerApi\Contracts\Enum;

class State extends Enum
{
    protected const MAX_ITEMS = 1;
    public const ENABLED = 'ENABLED';
    public const PAUSED = 'PAUSED';
    public const ARCHIVED = 'ARCHIVED';
    public const PENDING = 'PENDING';
    public const ENDED = 'ENDED';
    public const PENDING_REVIEW = 'PENDING_REVIEW';
    public const OUT_OF_BUDGET = 'OUT_OF_BUDGET';
    public const ACCOUNT_OUT_OF_BUDGET = 'ACCOUNT_OUT_OF_BUDGET';

    protected array $allowedValues = [
        'ENABLED',
        'PAUSED',
        'ARCHIVED',
        'PENDING',
        'ENDED',
        'PENDING_REVIEW',
        'OUT_OF_BUDGET',
        'ACCOUNT_OUT_OF_BUDGET',
    ];

    public static function enabled(): self
    {
        return (new static())->set(static::ENABLED);
    }

    public function isEnabled(): bool
    {
        return $this->is(static::ENABLED);
    }

    public static function paused(): self
    {
        return (new static())->set(static::PAUSED);
    }

    public function isPaused(): bool
    {
        return $this->is(static::PAUSED);
    }

    public static function archived(): self
    {
        return (new static())->set(static::ARCHIVED);
    }

    public function isArchived(): bool
    {
        return $this->is(static::ARCHIVED);
    }

    public static function pending(): self
    {
        return (new static())->set(static::PENDING);
    }

    public function isPending(): bool
    {
        return $this->is(static::PENDING);
    }

    public static function ended(): self
    {
        return (new static())->set(static::ENDED);
    }

    public function isEnded(): bool
    {
        return $this->is(static::ENDED);
    }

    public static function pendingReview(): self
    {
        return (new static())->set(static::PENDING_REVIEW);
    }

    public function isPendingReview(): bool
    {
        return $this->is(static::PENDING_REVIEW);
    }

    public static function outOfBudget(): self
    {
        return (new static())->set(static::OUT_OF_BUDGET);
    }

    public function isOutOfBudget(): bool
    {
        return $this->is(static::OUT_OF_BUDGET);
    }

    public static function accountOutOfBudget(): self
    {
        return (new static())->set(static::ACCOUNT_OUT_OF_BUDGET);
    }

    public function isAccountOutOfBudget(): bool
    {
        return $this->is(static::ACCOUNT_OUT_OF_BUDGET);
    }
}
