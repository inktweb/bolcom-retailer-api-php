<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Models
 */

namespace Inktweb\Bolcom\RetailerApi\Models\V5;

use Inktweb\Bolcom\RetailerApi\Contracts\Model;

/**
 * A delivery option shows how and the costs of a transport for a
 * shippable configuration
 * @method static DeliveryOption fromArray(array $data)
 */
final class DeliveryOption extends Model
{
    /**
     * Unique identifier for the shipping label offer.
     * @var string
     */
    protected $shippingLabelOfferId;

    /**
     * The date until the delivery option (incl total price) is valid.
     * @var string
     */
    protected $validUntilDate;

    /**
     * A code representing the transporter which is being used for
     * transportation.
     * @var string
     */
    protected $transporterCode;

    /**
     * The type of the label, representing the way an item is being
     * transported. MAILBOX is a mailbox package with delivery scan.
     * MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a
     * normal package.
     * @var string
     */
    protected $labelType;
    protected $labelPrice;
    protected $packageRestrictions;
    protected $handoverDetails;

    public function setShippingLabelOfferId(?string $shippingLabelOfferId): self
    {
        $this->shippingLabelOfferId = $shippingLabelOfferId;
        return $this;
    }

    public function getShippingLabelOfferId(): ?string
    {
        return $this->shippingLabelOfferId;
    }

    public function setValidUntilDate(?string $validUntilDate): self
    {
        $this->validUntilDate = $validUntilDate;
        return $this;
    }

    public function getValidUntilDate(): ?string
    {
        return $this->validUntilDate;
    }

    public function setTransporterCode(?string $transporterCode): self
    {
        $this->transporterCode = $transporterCode;
        return $this;
    }

    public function getTransporterCode(): ?string
    {
        return $this->transporterCode;
    }

    public function setLabelType(?string $labelType): self
    {
        $this->labelType = $labelType;
        return $this;
    }

    public function getLabelType(): ?string
    {
        return $this->labelType;
    }

    public function setLabelPrice($labelPrice): self
    {
        $this->labelPrice = $labelPrice;
        return $this;
    }

    public function getLabelPrice()
    {
        return $this->labelPrice;
    }

    public function setPackageRestrictions($packageRestrictions): self
    {
        $this->packageRestrictions = $packageRestrictions;
        return $this;
    }

    public function getPackageRestrictions()
    {
        return $this->packageRestrictions;
    }

    public function setHandoverDetails($handoverDetails): self
    {
        $this->handoverDetails = $handoverDetails;
        return $this;
    }

    public function getHandoverDetails()
    {
        return $this->handoverDetails;
    }
}
