<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Models
 */

namespace Inktweb\Bolcom\RetailerApi\Models\V5;

use Inktweb\Bolcom\RetailerApi\Contracts\Model;

/**
 * @method static ReducedReturnItem fromArray(array $data)
 */
final class ReducedReturnItem extends Model
{
    /**
     * The RMA (Return Merchandise Authorization) id that identifies this
     * particular return.
     * @var string
     */
    protected $rmaId;

    /**
     * The id of the customer order this return item is in.
     * @var string
     */
    protected $orderId;

    /**
     * The EAN number associated with this product.
     * @var string
     */
    protected $ean;

    /**
     * The quantity that is expected to be returned by the customer. Note:
     * this can be greater than 1 in case the customer ordered a quantity
     * greater than 1 of the same product in the same customer order.
     * @var int
     */
    protected $expectedQuantity;
    protected $returnReason;

    /**
     * Indicates if this return item has been handled (by the retailer).
     * @var bool
     */
    protected $handled;

    /** @var ReturnProcessingResult[] */
    protected $processingResults;

    public function setRmaId(string $rmaId): self
    {
        $this->rmaId = $rmaId;
        return $this;
    }

    public function getRmaId(): string
    {
        return $this->rmaId;
    }

    public function setOrderId(string $orderId): self
    {
        $this->orderId = $orderId;
        return $this;
    }

    public function getOrderId(): string
    {
        return $this->orderId;
    }

    public function setEan(string $ean): self
    {
        $this->ean = $ean;
        return $this;
    }

    public function getEan(): string
    {
        return $this->ean;
    }

    public function setExpectedQuantity(int $expectedQuantity): self
    {
        $this->expectedQuantity = $expectedQuantity;
        return $this;
    }

    public function getExpectedQuantity(): int
    {
        return $this->expectedQuantity;
    }

    public function setReturnReason($returnReason): self
    {
        $this->returnReason = $returnReason;
        return $this;
    }

    public function getReturnReason()
    {
        return $this->returnReason;
    }

    public function setHandled(?bool $handled): self
    {
        $this->handled = $handled;
        return $this;
    }

    public function getHandled(): ?bool
    {
        return $this->handled;
    }

    public function setProcessingResults(ReturnProcessingResult ...$processingResults): self
    {
        $this->processingResults = $processingResults;
        return $this;
    }

    public function getProcessingResults(): array
    {
        return $this->processingResults;
    }
}
