<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Models
 */

namespace Inktweb\Bolcom\RetailerApi\Models\V10\Retailer;

use Inktweb\Bolcom\RetailerApi\Contracts\Model;

/**
 * @method static RetailerReview fromArray(array $data)
 */
final class RetailerReview extends Model
{
    /** The total amount of customer review during that rating method period. */
    protected int $totalReviewCount = 0;

    /**
     * The percentage of the amount of customer that rated the retailer
     * either neutral or positive during the rating method period.
     */
    protected ?int $approvalPercentage = 0;

    /**
     * The amount of positive customer reviews during that rating method
     * period.
     */
    protected int $positiveReviewCount = 0;

    /**
     * The amount of neutral customer reviews during that rating method
     * period.
     */
    protected int $neutralReviewCount = 0;

    /**
     * The amount of negative customer reviews during that rating method
     * period.
     */
    protected int $negativeReviewCount = 0;

    public function setTotalReviewCount(int $totalReviewCount): self
    {
        $this->totalReviewCount = $totalReviewCount;
        return $this;
    }

    public function getTotalReviewCount(): int
    {
        return $this->totalReviewCount;
    }

    public function setApprovalPercentage(?int $approvalPercentage): self
    {
        $this->approvalPercentage = $approvalPercentage;
        return $this;
    }

    public function getApprovalPercentage(): ?int
    {
        return $this->approvalPercentage;
    }

    public function setPositiveReviewCount(int $positiveReviewCount): self
    {
        $this->positiveReviewCount = $positiveReviewCount;
        return $this;
    }

    public function getPositiveReviewCount(): int
    {
        return $this->positiveReviewCount;
    }

    public function setNeutralReviewCount(int $neutralReviewCount): self
    {
        $this->neutralReviewCount = $neutralReviewCount;
        return $this;
    }

    public function getNeutralReviewCount(): int
    {
        return $this->neutralReviewCount;
    }

    public function setNegativeReviewCount(int $negativeReviewCount): self
    {
        $this->negativeReviewCount = $negativeReviewCount;
        return $this;
    }

    public function getNegativeReviewCount(): int
    {
        return $this->negativeReviewCount;
    }
}
