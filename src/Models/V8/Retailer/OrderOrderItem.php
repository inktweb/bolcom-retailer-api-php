<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Models
 */

namespace Inktweb\Bolcom\RetailerApi\Models\V8\Retailer;

use Inktweb\Bolcom\RetailerApi\Contracts\Model;

/**
 * Order item details from an order.
 * @method static OrderOrderItem fromArray(array $data)
 */
final class OrderOrderItem extends Model
{
    /**
     * The id for the order item. One order can have multiple order items,
     * but the list can only take one item.
     */
    protected string $orderItemId = '';

    /**
     * Indicates whether the order was cancelled on request of the customer
     * before the retailer has shipped it.
     */
    protected bool $cancellationRequest = false;
    protected OrderFulfilment $fulfilment;
    protected OrderOffer $offer;
    protected OrderProduct $product;

    /** Amount of ordered products for this order item id. */
    protected int $quantity = 0;

    /** Amount of shipped products for this order item id. */
    protected int $quantityShipped = 0;

    /** Amount of cancelled products for this order item id. */
    protected int $quantityCancelled = 0;

    /** The selling price to the customer of a single unit including VAT. */
    protected float $unitPrice = 0;

    /** The commission for all quantities of this order item. */
    protected float $commission = 0;

    /** @var AdditionalService[] */
    protected array $additionalServices = [];

    /**
     * The date and time in ISO 8601 format when the orderItem was last
     * changed.
     */
    protected string $latestChangedDateTime = '';

    public function setOrderItemId(?string $orderItemId): self
    {
        $this->orderItemId = $orderItemId;
        return $this;
    }

    public function getOrderItemId(): ?string
    {
        return $this->orderItemId;
    }

    public function setCancellationRequest(?bool $cancellationRequest): self
    {
        $this->cancellationRequest = $cancellationRequest;
        return $this;
    }

    public function getCancellationRequest(): ?bool
    {
        return $this->cancellationRequest;
    }

    public function setFulfilment(?OrderFulfilment $fulfilment): self
    {
        $this->fulfilment = $fulfilment;
        return $this;
    }

    public function getFulfilment(): ?OrderFulfilment
    {
        return $this->fulfilment;
    }

    public function setOffer(?OrderOffer $offer): self
    {
        $this->offer = $offer;
        return $this;
    }

    public function getOffer(): ?OrderOffer
    {
        return $this->offer;
    }

    public function setProduct(?OrderProduct $product): self
    {
        $this->product = $product;
        return $this;
    }

    public function getProduct(): ?OrderProduct
    {
        return $this->product;
    }

    public function setQuantity(?int $quantity): self
    {
        $this->quantity = $quantity;
        return $this;
    }

    public function getQuantity(): ?int
    {
        return $this->quantity;
    }

    public function setQuantityShipped(?int $quantityShipped): self
    {
        $this->quantityShipped = $quantityShipped;
        return $this;
    }

    public function getQuantityShipped(): ?int
    {
        return $this->quantityShipped;
    }

    public function setQuantityCancelled(?int $quantityCancelled): self
    {
        $this->quantityCancelled = $quantityCancelled;
        return $this;
    }

    public function getQuantityCancelled(): ?int
    {
        return $this->quantityCancelled;
    }

    public function setUnitPrice(?float $unitPrice): self
    {
        $this->unitPrice = $unitPrice;
        return $this;
    }

    public function getUnitPrice(): ?float
    {
        return $this->unitPrice;
    }

    public function setCommission(?float $commission): self
    {
        $this->commission = $commission;
        return $this;
    }

    public function getCommission(): ?float
    {
        return $this->commission;
    }

    public function setAdditionalServices(?AdditionalService ...$additionalServices): self
    {
        $this->additionalServices = $additionalServices;
        return $this;
    }

    public function getAdditionalServices(): ?array
    {
        return $this->additionalServices;
    }

    public function setLatestChangedDateTime(string $latestChangedDateTime): self
    {
        $this->latestChangedDateTime = $latestChangedDateTime;
        return $this;
    }

    public function getLatestChangedDateTime(): string
    {
        return $this->latestChangedDateTime;
    }
}
