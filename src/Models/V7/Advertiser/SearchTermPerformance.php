<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Models
 */

namespace Inktweb\Bolcom\RetailerApi\Models\V7\Advertiser;

use Inktweb\Bolcom\RetailerApi\Contracts\Model;
use Inktweb\Bolcom\RetailerApi\Enums\Models\V7\Advertiser\SearchTermPerformance\KeywordMatchType;

/**
 * @method static SearchTermPerformance fromArray(array $data)
 */
final class SearchTermPerformance extends Model
{
    /** The identifier of the parent-campaign for this ad group. */
    protected string $campaignId = '';

    /** The identifier of the ad group. */
    protected string $adGroupId = '';

    /**
     * The text or phrase used in the keyword that caused the ad to be
     * displayed to the user.
     */
    protected string $keywordText = '';

    /**
     * The search term that is matched to the keyword that caused the ad to
     * be displayed to the user.
     */
    protected string $searchTerm = '';

    /**
     * The number of impressions from this search term for ads in the ad
     * group.
     */
    protected int $impressions = 0;

    /**
     * The value of sales in EUR that happened up to 14 days after the
     * visitor viewed an ad with this search term, with two decimals of
     * precision.
     */
    protected float $sales = 0;

    /** The number of clicks from this search term on ads in the ad group. */
    protected int $clicks = 0;

    /**
     * The Click-Through Rate is a ratio of clicks versus impressions from
     * this search term, with four decimals of precision.
     */
    protected float $ctr = 0;

    /**
     * The number of product sales that resulted from visitors viewing ads
     * with this keyword, up to 14 days after they viewed the ad.
     */
    protected int $conversions = 0;

    /**
     * The conversion rate is a ratio of the number of visitors who bought
     * the product up to 14 days after viewing the ad, versus those who only
     * viewed the ad, with four decimals of precision.
     */
    protected float $conversionRate = 0;

    /**
     * The amount spent on ads that used this search term in EUR, with two
     * decimals of precision.
     */
    protected float $spent = 0;

    /**
     * The average Cost Per Clicks of ads that were viewed with this search
     * term in EUR, with two decimals of precision.
     */
    protected float $cpc = 0;

    /**
     * The Advertising Cost Of Sale for the ads with this search term is a
     * ratio of the ad spend versus sales revenue, with four decimals of
     * precision.
     */
    protected float $acos = 0;

    /**
     * The Return on Advertising Spent for ads with this search term is a
     * ratio of sales revenue versus ad spend, with four decimals of
     * precision.
     */
    protected float $roas = 0;

    /**
     * The value of the average winning bid for ads with this search term in
     * an ad group in EUR, with two decimals of precision.
     */
    protected float $averageWinningBid = 0;

    /** The number of searches on this search term. */
    protected int $searchVolume = 0;

    /** The match type that relates the keyword and the search term. */
    protected KeywordMatchType $keywordMatchType;

    public function setCampaignId(?string $campaignId): self
    {
        $this->campaignId = $campaignId;
        return $this;
    }

    public function getCampaignId(): ?string
    {
        return $this->campaignId;
    }

    public function setAdGroupId(string $adGroupId): self
    {
        $this->adGroupId = $adGroupId;
        return $this;
    }

    public function getAdGroupId(): string
    {
        return $this->adGroupId;
    }

    public function setKeywordText(?string $keywordText): self
    {
        $this->keywordText = $keywordText;
        return $this;
    }

    public function getKeywordText(): ?string
    {
        return $this->keywordText;
    }

    public function setSearchTerm(?string $searchTerm): self
    {
        $this->searchTerm = $searchTerm;
        return $this;
    }

    public function getSearchTerm(): ?string
    {
        return $this->searchTerm;
    }

    public function setImpressions(?int $impressions): self
    {
        $this->impressions = $impressions;
        return $this;
    }

    public function getImpressions(): ?int
    {
        return $this->impressions;
    }

    public function setSales(?float $sales): self
    {
        $this->sales = $sales;
        return $this;
    }

    public function getSales(): ?float
    {
        return $this->sales;
    }

    public function setClicks(?int $clicks): self
    {
        $this->clicks = $clicks;
        return $this;
    }

    public function getClicks(): ?int
    {
        return $this->clicks;
    }

    public function setCtr(?float $ctr): self
    {
        $this->ctr = $ctr;
        return $this;
    }

    public function getCtr(): ?float
    {
        return $this->ctr;
    }

    public function setConversions(?int $conversions): self
    {
        $this->conversions = $conversions;
        return $this;
    }

    public function getConversions(): ?int
    {
        return $this->conversions;
    }

    public function setConversionRate(?float $conversionRate): self
    {
        $this->conversionRate = $conversionRate;
        return $this;
    }

    public function getConversionRate(): ?float
    {
        return $this->conversionRate;
    }

    public function setSpent(?float $spent): self
    {
        $this->spent = $spent;
        return $this;
    }

    public function getSpent(): ?float
    {
        return $this->spent;
    }

    public function setCpc(?float $cpc): self
    {
        $this->cpc = $cpc;
        return $this;
    }

    public function getCpc(): ?float
    {
        return $this->cpc;
    }

    public function setAcos(?float $acos): self
    {
        $this->acos = $acos;
        return $this;
    }

    public function getAcos(): ?float
    {
        return $this->acos;
    }

    public function setRoas(?float $roas): self
    {
        $this->roas = $roas;
        return $this;
    }

    public function getRoas(): ?float
    {
        return $this->roas;
    }

    public function setAverageWinningBid(?float $averageWinningBid): self
    {
        $this->averageWinningBid = $averageWinningBid;
        return $this;
    }

    public function getAverageWinningBid(): ?float
    {
        return $this->averageWinningBid;
    }

    public function setSearchVolume(?int $searchVolume): self
    {
        $this->searchVolume = $searchVolume;
        return $this;
    }

    public function getSearchVolume(): ?int
    {
        return $this->searchVolume;
    }

    public function setKeywordMatchType(?KeywordMatchType $keywordMatchType): self
    {
        $this->keywordMatchType = $keywordMatchType;
        return $this;
    }

    public function getKeywordMatchType(): ?KeywordMatchType
    {
        return $this->keywordMatchType;
    }
}
