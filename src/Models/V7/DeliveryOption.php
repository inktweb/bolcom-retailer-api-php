<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Models
 */

namespace Inktweb\Bolcom\RetailerApi\Models\V7;

use Inktweb\Bolcom\RetailerApi\Contracts\Model;
use Inktweb\Bolcom\RetailerApi\Enums\Models\V7\DeliveryOption\LabelType;

/**
 * A delivery option shows how and the costs of a transport for a
 * shippable configuration
 * @method static DeliveryOption fromArray(array $data)
 */
final class DeliveryOption extends Model
{
    /**
     * Unique identifier for the shipping label offer.
     * @var string
     */
    protected $shippingLabelOfferId = '';

    /**
     * Indicates whether this delivery option is recommended to be the best
     * option to ship your order item(s) with.
     * @var bool
     */
    protected $recommended = false;

    /**
     * The date until the delivery option (incl total price) is valid.
     * @var string
     */
    protected $validUntilDate = '';

    /**
     * A code representing the transporter which is being used for
     * transportation.
     * @var string
     */
    protected $transporterCode = '';

    /**
     * The type of the label, representing the way an item is being
     * transported. MAILBOX is a mailbox package with delivery scan.
     * MAILBOX_LIGHT is a mailbox package without delivery scan. PARCEL is a
     * normal package.
     * @var LabelType
     */
    protected $labelType;

    /**
     * The display name of the shipping label.
     * @var string
     */
    protected $labelDisplayName = '';

    /** @var LabelPrice */
    protected $labelPrice;

    /** @var PackageRestrictions */
    protected $packageRestrictions;

    /** @var HandoverDetails */
    protected $handoverDetails;

    public function setShippingLabelOfferId(string $shippingLabelOfferId): self
    {
        $this->shippingLabelOfferId = $shippingLabelOfferId;
        return $this;
    }

    public function getShippingLabelOfferId(): string
    {
        return $this->shippingLabelOfferId;
    }

    public function setRecommended(bool $recommended): self
    {
        $this->recommended = $recommended;
        return $this;
    }

    public function getRecommended(): bool
    {
        return $this->recommended;
    }

    public function setValidUntilDate(?string $validUntilDate): self
    {
        $this->validUntilDate = $validUntilDate;
        return $this;
    }

    public function getValidUntilDate(): ?string
    {
        return $this->validUntilDate;
    }

    public function setTransporterCode(string $transporterCode): self
    {
        $this->transporterCode = $transporterCode;
        return $this;
    }

    public function getTransporterCode(): string
    {
        return $this->transporterCode;
    }

    public function setLabelType(LabelType $labelType): self
    {
        $this->labelType = $labelType;
        return $this;
    }

    public function getLabelType(): LabelType
    {
        return $this->labelType;
    }

    public function setLabelDisplayName(string $labelDisplayName): self
    {
        $this->labelDisplayName = $labelDisplayName;
        return $this;
    }

    public function getLabelDisplayName(): string
    {
        return $this->labelDisplayName;
    }

    public function setLabelPrice(LabelPrice $labelPrice): self
    {
        $this->labelPrice = $labelPrice;
        return $this;
    }

    public function getLabelPrice(): LabelPrice
    {
        return $this->labelPrice;
    }

    public function setPackageRestrictions(PackageRestrictions $packageRestrictions): self
    {
        $this->packageRestrictions = $packageRestrictions;
        return $this;
    }

    public function getPackageRestrictions(): PackageRestrictions
    {
        return $this->packageRestrictions;
    }

    public function setHandoverDetails(?HandoverDetails $handoverDetails): self
    {
        $this->handoverDetails = $handoverDetails;
        return $this;
    }

    public function getHandoverDetails(): ?HandoverDetails
    {
        return $this->handoverDetails;
    }
}
