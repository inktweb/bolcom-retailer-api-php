<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Apis
 */

namespace Inktweb\Bolcom\RetailerApi\Apis\V7;

use Inktweb\Bolcom\RetailerApi\Contracts\Api;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Commissions;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Insights;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Inventory;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Invoices;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Offers;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Orders;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\ProductContent;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Promotions;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Replenishments;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Returns;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Shipments;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\ShippingLabels;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Subscriptions;
use Inktweb\Bolcom\RetailerApi\Endpoints\V7\Retailer\Transports;

final class Retailer extends Api
{
    protected Commissions $commissions;
    protected ProductContent $productContent;
    protected Insights $insights;
    protected Inventory $inventory;
    protected Invoices $invoices;
    protected Offers $offers;
    protected Orders $orders;
    protected Promotions $promotions;
    protected Replenishments $replenishments;
    protected Returns $returns;
    protected Shipments $shipments;
    protected ShippingLabels $shippingLabels;
    protected Subscriptions $subscriptions;
    protected Transports $transports;

    public function commissions(): Commissions
    {
        return $this->commissions
            ?? $this->commissions = new Commissions($this->client);
    }

    public function productContent(): ProductContent
    {
        return $this->productContent
            ?? $this->productContent = new ProductContent($this->client);
    }

    public function insights(): Insights
    {
        return $this->insights
            ?? $this->insights = new Insights($this->client);
    }

    public function inventory(): Inventory
    {
        return $this->inventory
            ?? $this->inventory = new Inventory($this->client);
    }

    public function invoices(): Invoices
    {
        return $this->invoices
            ?? $this->invoices = new Invoices($this->client);
    }

    public function offers(): Offers
    {
        return $this->offers
            ?? $this->offers = new Offers($this->client);
    }

    public function orders(): Orders
    {
        return $this->orders
            ?? $this->orders = new Orders($this->client);
    }

    public function promotions(): Promotions
    {
        return $this->promotions
            ?? $this->promotions = new Promotions($this->client);
    }

    public function replenishments(): Replenishments
    {
        return $this->replenishments
            ?? $this->replenishments = new Replenishments($this->client);
    }

    public function returns(): Returns
    {
        return $this->returns
            ?? $this->returns = new Returns($this->client);
    }

    public function shipments(): Shipments
    {
        return $this->shipments
            ?? $this->shipments = new Shipments($this->client);
    }

    public function shippingLabels(): ShippingLabels
    {
        return $this->shippingLabels
            ?? $this->shippingLabels = new ShippingLabels($this->client);
    }

    public function subscriptions(): Subscriptions
    {
        return $this->subscriptions
            ?? $this->subscriptions = new Subscriptions($this->client);
    }

    public function transports(): Transports
    {
        return $this->transports
            ?? $this->transports = new Transports($this->client);
    }
}
