<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Endpoints
 */

namespace Inktweb\Bolcom\RetailerApi\Endpoints\V6;

use Inktweb\Bolcom\RetailerApi\Contracts\Endpoint;
use Inktweb\Bolcom\RetailerApi\Enums\Endpoints\V6\Commissions\Condition;
use Inktweb\Bolcom\RetailerApi\Models\V6\BulkCommissionRequest;
use Inktweb\Bolcom\RetailerApi\Models\V6\BulkCommissionResponse;
use Inktweb\Bolcom\RetailerApi\Models\V6\Commission;
use Inktweb\Bolcom\RetailerApi\Models\V6\Problem;

final class Commissions extends Endpoint
{
    /**
     * Get all commissions and reductions by EAN in bulk.
     *
     * Gets all commissions and possible reductions by EAN, price, and
     * optionally condition.
     */
    public function getCommissions(BulkCommissionRequest $body): BulkCommissionResponse
    {
        return BulkCommissionResponse::fromArray(
            $this->request(
                'post',
                'commission',
                [],
                [],
                $body,
                [
                'application/vnd.retailer.v6+json',
                ],
                [
                'application/vnd.retailer.v6+json',
                ],
                [
                400 => Problem::class,
                404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get all commissions and reductions by EAN per single EAN.
     *
     * Commissions can be filtered by condition, which defaults to NEW. We
     * will calculate the commission amount from the EAN and price.
     */
    public function getCommission(string $ean, float $unitPrice, ?Condition $condition = null): Commission
    {
        return Commission::fromArray(
            $this->request(
                'get',
                'commission/{ean}',
                [
                'ean' => $ean,
                ],
                [
                'condition' => $condition,
                'unit-price' => $unitPrice,
                ],
                null,
                [
                'application/vnd.retailer.v6+json',
                ],
                [
                'application/vnd.retailer.v6+json',
                ],
                [
                400 => Problem::class,
                404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }
}
