<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Endpoints
 */

namespace Inktweb\Bolcom\RetailerApi\Endpoints\V10\Retailer;

use GuzzleHttp\Exception\GuzzleException;
use Inktweb\Bolcom\RetailerApi\Contracts\Endpoint;
use Inktweb\Bolcom\RetailerApi\Enums\Endpoints\V10\Retailer\Orders\FulfilmentMethod;
use Inktweb\Bolcom\RetailerApi\Enums\Endpoints\V10\Retailer\Orders\Status;
use Inktweb\Bolcom\RetailerApi\Exceptions\ApiException;
use Inktweb\Bolcom\RetailerApi\Exceptions\Enum\UnknownCollectionFormatException;
use Inktweb\Bolcom\RetailerApi\Exceptions\UnexpectedResponseContentTypeException;
use Inktweb\Bolcom\RetailerApi\Models\V10\Retailer\Order;
use Inktweb\Bolcom\RetailerApi\Models\V10\Retailer\Problem;
use Inktweb\Bolcom\RetailerApi\Models\V10\Retailer\ProcessStatus;
use Inktweb\Bolcom\RetailerApi\Models\V10\Retailer\ReducedOrders;

final class Orders extends Endpoint
{
    /**
     * Get a list of orders.
     *
     * Gets a paginated list of all orders for a retailer.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getOrders(
        ?int $page = null,
        ?FulfilmentMethod $fulfilmentMethod = null,
        ?Status $status = null,
        ?int $changeIntervalMinute = null,
        ?string $latestChangeDate = null
    ): ReducedOrders {
        return ReducedOrders::fromArray(
            $this->request(
                'get',
                'orders',
                [],
                [
                'page' => $page,
                'fulfilment-method' => $fulfilmentMethod,
                'status' => $status,
                'change-interval-minute' => $changeIntervalMinute,
                'latest-change-date' => $latestChangeDate,
                ],
                null,
                [
                'application/vnd.retailer.v10+json',
                ],
                [
                'application/vnd.retailer.v10+json',
                ],
                []
            )->getBody()->getJson()
        );
    }

    /**
     * Cancel an order item by an order item id.
     *
     * This endpoint can be used to either confirm a cancellation request by
     * the customer or to cancel an order item you yourself are unable to
     * fulfil.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function cancelOrderItem(): ProcessStatus
    {
        return ProcessStatus::fromArray(
            $this->request(
                'put',
                'orders/cancellation',
                [],
                [],
                null,
                [
                'application/vnd.retailer.v10+json',
                ],
                [
                'application/vnd.retailer.v10+json',
                ],
                [
                400 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get an order by order id.
     *
     * Gets an order by order id. The order can be partially shipped or
     * cancelled, and the message contains the quantity shipped or cancelled
     * items. The unitPrice takes account of volume discounts.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getOrder(string $orderId): Order
    {
        return Order::fromArray(
            $this->request(
                'get',
                'orders/{order-id}',
                [
                'order-id' => $orderId,
                ],
                [],
                null,
                [
                'application/vnd.retailer.v10+json',
                ],
                [
                'application/vnd.retailer.v10+json',
                ],
                [
                404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }
}
