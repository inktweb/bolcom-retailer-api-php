<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Endpoints
 */

namespace Inktweb\Bolcom\RetailerApi\Endpoints\V9\Advertiser;

use GuzzleHttp\Exception\GuzzleException;
use Inktweb\Bolcom\RetailerApi\Contracts\Endpoint;
use Inktweb\Bolcom\RetailerApi\Exceptions\ApiException;
use Inktweb\Bolcom\RetailerApi\Exceptions\Enum\UnknownCollectionFormatException;
use Inktweb\Bolcom\RetailerApi\Exceptions\UnexpectedResponseContentTypeException;
use Inktweb\Bolcom\RetailerApi\Models\V9\Advertiser\AdGroupsResponse;
use Inktweb\Bolcom\RetailerApi\Models\V9\Advertiser\CreateAdGroupRequest;
use Inktweb\Bolcom\RetailerApi\Models\V9\Advertiser\Problem;
use Inktweb\Bolcom\RetailerApi\Models\V9\Advertiser\ProcessStatus;
use Inktweb\Bolcom\RetailerApi\Models\V9\Advertiser\UpdateAdGroupRequest;

final class AdGroups extends Endpoint
{
    /**
     * Get a list of ad groups.
     *
     * Gets a paginated list of all ad groups that are present within a
     * campaign.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getAdGroups(string $campaignId, ?int $page = null): AdGroupsResponse
    {
        return AdGroupsResponse::fromArray(
            $this->request(
                'get',
                '/advertiser/sponsored-products/ad-groups',
                [],
                [
                'campaign-id' => $campaignId,
                'page' => $page,
                ],
                null,
                [
                'application/vnd.advertiser.v9+json',
                ],
                [
                'application/vnd.advertiser.v9+json',
                ],
                [
                400 => Problem::class,
                404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Create an ad group.
     *
     * Creates an ad group.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function postAdGroup(CreateAdGroupRequest $body): ProcessStatus
    {
        return ProcessStatus::fromArray(
            $this->request(
                'post',
                '/advertiser/sponsored-products/ad-groups',
                [],
                [],
                $body,
                [
                'application/vnd.advertiser.v9+json',
                ],
                [
                'application/vnd.advertiser.v9+json',
                ],
                [
                400 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get an ad group by ad group id.
     *
     * Gets the details of an ad group.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getAdGroupById(string $adGroupId): AdGroupsResponse
    {
        return AdGroupsResponse::fromArray(
            $this->request(
                'get',
                '/advertiser/sponsored-products/ad-groups/{ad-group-id}',
                [
                'ad-group-id' => $adGroupId,
                ],
                [],
                null,
                [
                'application/vnd.advertiser.v9+json',
                ],
                [
                'application/vnd.advertiser.v9+json',
                ],
                [
                400 => Problem::class,
                404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Update an ad group by ad group id.
     *
     * Updates an ad group.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function putAdGroups(string $adGroupId, UpdateAdGroupRequest $body): ProcessStatus
    {
        return ProcessStatus::fromArray(
            $this->request(
                'put',
                '/advertiser/sponsored-products/ad-groups/{ad-group-id}',
                [
                'ad-group-id' => $adGroupId,
                ],
                [],
                $body,
                [
                'application/vnd.advertiser.v9+json',
                ],
                [
                'application/vnd.advertiser.v9+json',
                ],
                [
                400 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }
}
