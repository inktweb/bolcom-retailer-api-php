<?php

/**
 * This file is auto-generated by
 * Inktweb\Bolcom\RetailerApi\Development\Generator\Endpoints
 */

namespace Inktweb\Bolcom\RetailerApi\Endpoints\V9\Retailer;

use GuzzleHttp\Exception\GuzzleException;
use Inktweb\Bolcom\RetailerApi\Contracts\Endpoint;
use Inktweb\Bolcom\RetailerApi\Enums\Endpoints\V9\Retailer\Products\AcceptLanguage;
use Inktweb\Bolcom\RetailerApi\Enums\Endpoints\V9\Retailer\Products\Condition;
use Inktweb\Bolcom\RetailerApi\Enums\Endpoints\V9\Retailer\Products\CountryCode;
use Inktweb\Bolcom\RetailerApi\Enums\Endpoints\V9\Retailer\Products\Usage;
use Inktweb\Bolcom\RetailerApi\Exceptions\ApiException;
use Inktweb\Bolcom\RetailerApi\Exceptions\Enum\UnknownCollectionFormatException;
use Inktweb\Bolcom\RetailerApi\Exceptions\UnexpectedResponseContentTypeException;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\CompetingOffersResponse;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\Problem;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\ProductAssetsResponse;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\ProductIdsResponse;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\ProductListFiltersResponse;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\ProductListRequest;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\ProductListResponse;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\ProductPlacementResponse;
use Inktweb\Bolcom\RetailerApi\Models\V9\Retailer\ProductRatingsResponse;

final class Products extends Endpoint
{
    /**
     * Get product list.
     *
     * Gets the list of products based on category, search term or filters.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getProductList(
        ?AcceptLanguage $acceptLanguage = null,
        ProductListRequest $body
    ): ProductListResponse {
        return ProductListResponse::fromArray(
            $this->request(
                'post',
                'products/list',
                [],
                [],
                $body,
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    400 => Problem::class,
                    404 => Problem::class,
                    406 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get product list filters.
     *
     * Gets the list of possible filters for products based on category or
     * search term.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getProductListFilters(
        ?CountryCode $countryCode = null,
        ?string $searchTerm = null,
        ?string $categoryId = null,
        ?AcceptLanguage $acceptLanguage = null
    ): ProductListFiltersResponse {
        return ProductListFiltersResponse::fromArray(
            $this->request(
                'get',
                'products/list-filters',
                [],
                [
                    'country-code' => $countryCode,
                    'search-term' => $searchTerm,
                    'category-id' => $categoryId,
                ],
                null,
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    400 => Problem::class,
                    404 => Problem::class,
                    406 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get product assets.
     *
     * Gets the list of asset available for the product by EAN.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getProductAssets(string $ean, ?Usage $usage = null): ProductAssetsResponse
    {
        return ProductAssetsResponse::fromArray(
            $this->request(
                'get',
                'products/{ean}/assets',
                [
                    'ean' => $ean,
                ],
                [
                    'usage' => $usage,
                ],
                null,
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    400 => Problem::class,
                    404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get a list of competing offers by EAN.
     *
     * Use this endpoint to get a list of offers available in the webshop.
     * The list includes offers for all retailers.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getCompetingOffers(
        string $ean,
        ?int $page = null,
        ?CountryCode $countryCode = null,
        ?bool $bestOfferOnly = null,
        ?Condition $condition = null
    ): CompetingOffersResponse {
        return CompetingOffersResponse::fromArray(
            $this->request(
                'get',
                'products/{ean}/offers',
                [
                    'ean' => $ean,
                ],
                [
                    'page' => $page,
                    'country-code' => $countryCode,
                    'best-offer-only' => $bestOfferOnly,
                    'condition' => $condition,
                ],
                null,
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    400 => Problem::class,
                    404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get product placement.
     *
     * Gets the list of categories and the URL where the product is placed in
     * the webshop.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getProductPlacement(
        string $ean,
        ?CountryCode $countryCode = null,
        ?AcceptLanguage $acceptLanguage = null
    ): ProductPlacementResponse {
        return ProductPlacementResponse::fromArray(
            $this->request(
                'get',
                'products/{ean}/placement',
                [
                    'ean' => $ean,
                ],
                [
                    'country-code' => $countryCode,
                ],
                null,
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    400 => Problem::class,
                    404 => Problem::class,
                    406 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get product ids by EAN.
     *
     * Get the bol.com specific product identifier and the related EANs.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getProductIds(string $ean): ProductIdsResponse
    {
        return ProductIdsResponse::fromArray(
            $this->request(
                'get',
                'products/{ean}/product-ids',
                [
                    'ean' => $ean,
                ],
                [],
                null,
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    400 => Problem::class,
                    404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }

    /**
     * Get product ratings.
     *
     * Gets a list of ratings for the products associated with the provided
     * EAN.
     *
     * @throws ApiException
     * @throws GuzzleException
     * @throws UnexpectedResponseContentTypeException
     * @throws UnknownCollectionFormatException
     */
    public function getProductRatings(string $ean): ProductRatingsResponse
    {
        return ProductRatingsResponse::fromArray(
            $this->request(
                'get',
                'products/{ean}/ratings',
                [
                    'ean' => $ean,
                ],
                [],
                null,
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    'application/vnd.retailer.v9+json',
                ],
                [
                    400 => Problem::class,
                    404 => Problem::class,
                ]
            )->getBody()->getJson()
        );
    }
}
